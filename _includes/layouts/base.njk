<!doctype html>
<html lang="{{ metadata.language }}">
	<head>
		<meta charset="utf-8">
		<meta name="viewport" content="width=device-width, initial-scale=1.0">
		<title>{{ title or metadata.title }}</title>
		<meta name="description" content="{{ description or metadata.description }}">
		<link rel="alternate" href="/feed/feed.xml" type="application/atom+xml" title="{{ metadata.title }}">

		{#- Uncomment this if youâ€™d like folks to know that you used Eleventy to build your site!  #}
		<meta name="generator" content="{{ eleventy.generator }}">

		{#-
		Plain-text bundles are provided via the `eleventy-plugin-bundle` plugin:
		1. CSS:
			* Add to a per-page bundle using `{% css %}{% endcss %}`
			* Retrieve bundle content using `{% getBundle "css" %}` or `{% getBundleFileUrl "css" %}`
		2. Or for JavaScript:
			* Add to a per-page bundle using `{% js %}{% endjs %}`
			* Retrieve via `{% getBundle "js" %}` or `{% getBundleFileUrl "js" %}`
		3. Learn more: https://github.com/11ty/eleventy-plugin-bundle
		#}

		{#- Add an arbitrary string to the bundle #}
		<style>/* This is an arbitrary CSS string added to the bundle */</style>
		{#- Add the contents of a file to the bundle #}
		<style>{% include "css/index.css" %}</style>
		{#- Or you can add from node_modules #}
		{# <style>{% include "node_modules/prismjs/themes/prism-okaidia.css" %}</style> #}

		{#- Render the CSS bundle using inlined CSS (for the fastest site performance in production) #}
		<style>{% getBundle "css" %}</style>
		{#- Renders the CSS bundle using a separate file, if you can't set CSP directive style-src: 'unsafe-inline' #}
		{#- <link rel="stylesheet" href="{% getBundleFileUrl "css" %}"> #}

		{#- Add the heading-anchors web component to the JavaScript bundle #}
		<script type="module">{% include "node_modules/@zachleat/heading-anchors/heading-anchors.js" %}</script>

		{# Add schema.org structured data as JSON-LD #}
		<script eleventy:ignore type="application/ld+json">{{ schemaorg | dump(\t) | safe }}</script>
		{# Add schema.org breadcrumb as JSON-LD #}
		{%- set breadcrumb = collections.all | eleventyNavigationBreadcrumb(eleventyNavigation.key, { allowMissing: true, includeSelf: true } ) %}

        {%- set breadcrumbSchema = [] %}
        {%- for b in breadcrumb %}
            {%- set absolutePostUrl %}{{ b.url | htmlBaseUrl(metadata.url) }}{% endset %}
            {%- set bb = { key: b.key, title: b.title, url: absolutePostUrl, pluginType: b.pluginType } %}
            {%- set breadcrumbSchema = (breadcrumbSchema.push(bb), breadcrumbSchema) %}
        {% endfor %}
		<script eleventy:ignore type="application/ld+json">{{ breadcrumbSchema | eleventyNavigationToSchemaOrg | dump(\t) | safe }}</script>

	</head> 
	<body>
		<a href="#main" id="skip-link" class="visually-hidden">Skip to main content</a>

		<header>
			<a href="/" class="home-link">{{ metadata.title }}</a>

			{#- Read more about `eleventy-navigation` at https://www.11ty.dev/docs/plugins/navigation/ #}
			<nav>
				<h2 class="visually-hidden">Top level navigation menu</h2>
				<ul class="nav">
					<li class="nav-item"><a href="/"{% if '/' == page.url %} aria-current="page"{% endif %}>Home</a></li>
				{%- for entry in collections.all | eleventyNavigation("Home") %}
					<li class="nav-item"><a href="{{ entry.url }}"{% if entry.url == page.url %} aria-current="page"{% endif %}>{{ entry.title }}</a></li>
				{%- endfor %}
				</ul>
			</nav>
			<nav>
	            <div class="container" id="breadcrumb">
					{% set breadcrumb = collections.all | eleventyNavigationBreadcrumb(eleventyNavigation.key, { allowMissing: true, includeSelf: true } ) %}
					{{ breadcrumb | eleventyNavigationToHtml | safe }}    
				</div>
			</nav>
		</header>

		<main id="main">
			<heading-anchors>
				{{ content | safe }}
			</heading-anchors>
		</main>

		<footer>
			<p><em>Built with <a href="https://www.11ty.dev/">{{ eleventy.generator }}</a>
				by <a href="{{ metadata.author.url }}">{{ metadata.author.name }}</em></p>
		</footer>

		<!-- This page `{{ page.url }}` was built on {% currentBuildDate %} -->
		<script type="module" src="{% getBundleFileUrl "js" %}"></script>
	</body>
</html>
